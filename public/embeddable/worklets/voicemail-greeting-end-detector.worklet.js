const INPUT_BUFFER_SIZE=128;class VoicemailGreetingEndDetector extends AudioWorkletProcessor{constructor(options){super(),this.threshold=.01,this.beepPowerThreshold=2e4,this.beepFrequencies=[625,850,1e3,1250,1400,1500,1700],this.silenceCounter=0,this.silenceCounterAfterBeep=0,this.beepSoundCounter=0,this.beepSilenceDuration=2,this.beepSoundDuration=5;const config=(null==options?void 0:options.processorOptions)||{};this.noBeepSilenceDuration=config.noBeepSilenceDuration||4,console.log("noBeepSilenceDuration",this.noBeepSilenceDuration),this.sampleRate=sampleRate,this.framesPerSecond=this.sampleRate/128,this.bufferSize=3456,this.inputBuffer=new Float32Array(this.bufferSize),this.noBeepSilenceCounterThreshold=this.noBeepSilenceDuration*this.framesPerSecond/(this.bufferSize/128),this.beepSilenceCounterThreshold=this.beepSilenceDuration*this.framesPerSecond/(this.bufferSize/128),this.beepSoundCounterThreshold=this.beepSoundDuration*this.framesPerSecond/(this.bufferSize/128),this.state="listening",this.inputBufferIndex=0}rms(buffer){let sum=0;for(let i=0;i<buffer.length;i++)sum+=buffer[i]*buffer[i];return Math.sqrt(sum/buffer.length)}pushInputToBuffer(input){for(let i=0;i<input.length;i++)this.inputBuffer[this.inputBufferIndex++]=input[i];let bufferReady=this.inputBufferIndex>=this.bufferSize;return bufferReady&&(this.inputBufferIndex=0),bufferReady}_goertzelPower(buffer,targetFrequency){const N=buffer.length,k=Math.round(N*targetFrequency/this.sampleRate),omega=2*Math.PI*k/N,coeff=2*Math.cos(omega);let s_prev=0,s_prev2=0;for(let i=0;i<N;i++){const s=buffer[i]+coeff*s_prev-s_prev2;s_prev2=s_prev,s_prev=s}return s_prev2*s_prev2+s_prev*s_prev-coeff*s_prev*s_prev2}detectBeep(buffer){let maxPower=-1,detectedFrequency=-1,beepDetected=!1;for(const freq of this.beepFrequencies){const power=this._goertzelPower(buffer,freq);power>maxPower&&(maxPower=power,detectedFrequency=freq),power>this.beepPowerThreshold&&(beepDetected=!0)}return beepDetected?console.log(`VoicemailGreetingEndDetector: Beep detected: ${beepDetected}. Max power ${maxPower.toFixed(2)} at ${detectedFrequency}Hz (Threshold: ${this.beepPowerThreshold})`):maxPower>1e3&&console.log(`VoicemailGreetingEndDetector: No beep detected, but max power ${maxPower.toFixed(2)} at ${detectedFrequency}Hz (Threshold: ${this.beepPowerThreshold})`),beepDetected}process(inputs){const input=inputs[0][0];if(!input)return!0;if(!this.pushInputToBuffer(input))return!0;const inputBuffer=this.inputBuffer.slice(),isSilence=this.rms(inputBuffer)<this.threshold;switch(this.state){case"listening":if(isSilence){this.silenceCounter++,this.silenceCounter>this.noBeepSilenceCounterThreshold&&(console.log("Greeting ended after long silence"),this.state="greeting-ended",this.silenceCounter=0,this.port.postMessage("greeting-ended"));break}this.silenceCounter=0,this.detectBeep(inputBuffer)&&(console.log("Beep detected, waiting for silence"),this.state="waiting-for-silence");break;case"waiting-for-silence":if(isSilence){console.log("Silence detected after beep"),this.state="silence-detected",this.beepSoundCounter=0;break}if(this.beepSoundCounter++,this.beepSoundCounter>this.beepSoundCounterThreshold){console.log("Wrong beep detection, back to listening"),this.beepSoundCounter=0,this.state="listening";break}break;case"silence-detected":isSilence?(this.silenceCounterAfterBeep++,this.silenceCounterAfterBeep>this.beepSilenceCounterThreshold&&(this.state="greeting-ended",this.silenceCounterAfterBeep=0,console.log("Greeting ended after beep silence"),this.port.postMessage("greeting-ended"))):(this.state="listening",this.silenceCounterAfterBeep=0,console.log("Get sound after silence, back to listening"))}return!0}}try{registerProcessor("voicemail-greeting-end-detector",VoicemailGreetingEndDetector)}catch(e){console.error("Failed to register VoicemailGreetingEndDetector processor:",e)}